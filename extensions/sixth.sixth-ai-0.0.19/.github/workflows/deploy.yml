name: Build and Deploy to EKS

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Install docker-compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
  

    - name: Extract repository URI
      id: ecr
      run: echo "::set-output name=uri::${{ secrets.ECR_REPOSITORY_URI }}"

    - name: Build Docker images
      run: |
        docker-compose build web celery

    - name: Tag and push web image
      run: |
        web_image=${{ secrets.ECR_SIXTH_CHATGPT_REPOSITORY_URI }}:web-${{ github.sha }}
        docker build -t ${{ secrets.ECR_SIXTH_CHATGPT_REPOSITORY_URI }}:$IMAGE_TAG .
        docker push ${{ secrets.ECR_SIXTH_CHATGPT_REPOSITORY_URI }}:$IMAGE_TAG
      env:
        ECR_SIXTH_CHATGPT_REPOSITORY_URI: ${{ secrets.ECR_SIXTH_CHATGPT_REPOSITORY_URI }}
        IMAGE_TAG: latest

    - name: Tag and push celery image
      run: |
        celery_image=${{ secrets.ECR_SIXTH_CELERY_REPOSITORY_URI }}:celery-${{ github.sha }}
        docker build -t ${{ secrets.ECR_SIXTH_CELERY_REPOSITORY_URI }}:$IMAGE_TAG .
        docker push ${{ secrets.ECR_SIXTH_CELERY_REPOSITORY_URI }}:$IMAGE_TAG
      env:
        ECR_SIXTH_CELERY_REPOSITORY_URI: ${{ secrets.ECR_SIXTH_CELERY_REPOSITORY_URI }}
        IMAGE_TAG: latest
        

  update-deployment:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }}
      env:
        AWS_REGION: ${{ secrets.AWS_REGION }}
        EKS_CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME }}

    - name: Update EKS deployment
      run: |
        kubectl rollout restart deployment/web-app-deployment 
        kubectl rollout restart deployment/celery-deployment
      
